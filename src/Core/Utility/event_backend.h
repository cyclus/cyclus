// event_backend.h
#ifndef CYCLUS_CORE_UTILITY_EVENT_BACKEND_H_
#define CYCLUS_CORE_UTILITY_EVENT_BACKEND_H_

#include <vector>

#include <boost/intrusive_ptr.hpp>

#include "Event.h"

typedef std::vector<Event*> EventList;

/// An abstract base class for listeners (e.g. output databases) that want
/// to receive data generated by the simulation.
class EventBackend {
 public:
  /// Used to pass a list of new/collected events
  virtual void Notify(EventList events) = 0;

  /// Used to uniquely identify a backend - particularly if there are more
  /// than one in a simulation.
  virtual std::string Name() = 0;

  /// Used to notify the backend that no more events will be sent (i.e.
  /// the simulatoin is over).
  virtual void Close() = 0;
};

#endif
